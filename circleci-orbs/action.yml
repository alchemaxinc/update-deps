name: 'Update CircleCI Orbs'

description: 'Update CircleCI orbs to their latest versions'

inputs:
  token:
    required: false
    description: 'GitHub token'
    default: ${{ github.token }}

  base-branch:
    required: true
    description: 'Base branch for PR'
    default: 'develop'

  branch-prefix:
    required: false
    description: 'Branch prefix'
    default: 'update-orbs'

  pr-title:
    required: false
    description: 'Title for the pull request'
    default: 'Update CircleCI Orbs'

  commit-message:
    required: false
    description: 'The commit message for the update'
    default: 'Update CircleCI orbs'

  circleci-config-file:
    required: false
    description: 'Path to the CircleCI config file'
    default: '.circleci/config.yml'

  yq-version:
    required: false
    description: 'Version of yq to use'
    default: 'v4.44.1'

runs:
  using: 'composite'
  steps:
    - name: Checkout and setup
      uses: alchemaxinc/composite-toolbox/checkout-and-setup@v1
      with:
        token: ${{ inputs.token }}

    - name: Cache yq binary
      id: cache-yq
      uses: actions/cache@v4
      with:
        path: ~/.local/bin/yq
        key: yq-${{ inputs.yq-version }}-linux-amd64

    - name: Install yq
      if: steps.cache-yq.outputs.cache-hit != 'true'
      shell: bash
      run: |
        mkdir -p ~/.local/bin
        curl -L https://github.com/mikefarah/yq/releases/download/${{ inputs.yq-version }}/yq_linux_amd64 -o ~/.local/bin/yq
        chmod +x ~/.local/bin/yq

    - name: Add yq to PATH
      shell: bash
      run: echo "~/.local/bin" >> $GITHUB_PATH

    - name: Update CircleCI Orbs
      shell: bash
      env:
        GH_TOKEN: ${{ inputs.token }}
      run: |
        CONFIG_FILE="${{ inputs.circleci-config-file }}"

        # Read orbs from config.yml
        orbs=$(yq eval '.orbs | keys | .[]' "$CONFIG_FILE")

        for orb in $orbs; do
          echo "::debug::Processing orb: $orb"

          # Capture the old orb value (namespace@version)
          old_value=$(yq eval ".orbs.$orb" "$CONFIG_FILE")

          # Get the orb namespace (e.g., "circleci/aws-cli" from "circleci/aws-cli@5.3.5")
          orb_full_name=$(echo "$old_value" | cut -d'@' -f1)
          
          # Get the current version
          current_version=$(echo "$old_value" | cut -d'@' -f2)

          # Get latest tag from GitHub
          latest_tag=$(gh api repos/CircleCI-Public/${orb}-orb/releases/latest --jq '.tag_name' | sed 's/^v//')

          if [ -z "$latest_tag" ]; then
            echo "::error::Could not find latest tag for ${orb}-orb, failing"
            exit 1
          fi

          echo "::debug::Latest version: $latest_tag"

          if [ "$current_version" != "$latest_tag" ]; then
            sed -i "s|\($orb_full_name@\)[^\"' ]*|\1$latest_tag|" "$CONFIG_FILE"
            echo "::notice::Updated $orb from $current_version to $latest_tag"
            exit 0
          fi

          echo "::debug::$orb is already at latest version $latest_tag"
        done

    - name: Check for changes
      id: check_changes
      uses: alchemaxinc/composite-toolbox/check-changes@v1
      with:
        files: ${{ inputs.circleci-config-file }}

    - name: Create Pull Request
      if: steps.check_changes.outputs.has_changes == 'true'
      uses: alchemaxinc/composite-toolbox/create-pr@v1
      with:
        token: ${{ inputs.token }}
        base-branch: ${{ inputs.base-branch }}
        branch-prefix: ${{ inputs.branch-prefix }}
        files: ${{ inputs.circleci-config-file }}
        commit-message: ${{ inputs.commit-message }}
        pr-title: ${{ inputs.pr-title }}
        pr-body: |
          # :arrows_counterclockwise: CircleCI Orbs Update

          This pull request automatically updates CircleCI orbs to their latest versions.

          ## :warning: Important Notes

          - :robot: This PR was **automatically generated**
          - :mag: Please **review all changes** carefully before merging
          - :test_tube: Ensure all tests pass and functionality works as expected
          - :books: Check for any breaking changes or release notes for updated orbs

          ## :rocket: Next Steps

          1. Review the orb changes above
          2. Run tests locally or wait for CI/CD to complete
          3. Merge when everything looks good!

          ---

          *Generated by the CircleCI Orbs Update action* :sparkles:
