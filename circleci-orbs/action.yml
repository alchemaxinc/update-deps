name: Update CircleCI Orbs

env:
  BASE_BRANCH: 'develop'
  BRANCH_PREFIX: 'update-orbs'
  YQ_VERSION: 'v4.44.1'

on:
  workflow_dispatch:

  # Weekly on Mondays at 10 AM UTC
  schedule:
    - cron: '0 10 * * 1'

permissions:
  contents: write
  pull-requests: write

jobs:
  update-orbs:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ github.token }}

      - name: Cache yq binary
        id: cache-yq
        uses: actions/cache@v4
        with:
          path: ~/.local/bin/yq
          key: yq-${{ env.YQ_VERSION }}-linux-amd64

      - name: Install yq
        if: steps.cache-yq.outputs.cache-hit != 'true'
        run: |
          mkdir -p ~/.local/bin
          curl -L https://github.com/mikefarah/yq/releases/download/${YQ_VERSION}/yq_linux_amd64 -o ~/.local/bin/yq
          chmod +x ~/.local/bin/yq

      - name: Add yq to PATH
        run: echo "~/.local/bin" >> $GITHUB_PATH

      - name: Update CircleCI Orbs
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          CONFIG_FILE=".circleci/config.yml"

          # Read orbs from config.yml
          orbs=$(yq eval '.orbs | keys | .[]' "$CONFIG_FILE")

          for orb in $orbs; do
            echo "Processing orb: $orb"

            # Capture the old orb value (namespace@version)
            old_value=$(yq eval ".orbs.$orb" "$CONFIG_FILE")

            # Get the orb namespace (e.g., "circleci/aws-cli" from "circleci/aws-cli@5.3.5")
            orb_full_name=$(echo "$old_value" | cut -d'@' -f1)

            # Get latest tag from GitHub
            latest_tag=$(gh api repos/CircleCI-Public/${orb}-orb/releases/latest --jq '.tag_name' | sed 's/^v//')

            if [ -z "$latest_tag" ]; then
              echo "Could not find latest tag for ${orb}-orb, failing"
              exit 1
            fi

            echo "Latest version: $latest_tag"

            sed -i "s|\($orb_full_name@\)[^\"' ]*|\1$latest_tag|" "$CONFIG_FILE"
            echo "Updated $orb to $latest_tag"
          done

      - name: Check for changes
        id: changes
        run: |
          if git diff --quiet .circleci/config.yml; then
            echo "changed=false" >> $GITHUB_OUTPUT
            exit 0
          fi

          echo "changed=true" >> $GITHUB_OUTPUT

      - name: Create Pull Request
        if: steps.changes.outputs.changed == 'true'
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          # Configure git
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

          # Create a new branch using global variable
          BRANCH_NAME="${{ env.BRANCH_PREFIX }}-$(date +%Y%m%d)-${{ github.run_id }}"
          git checkout -b "$BRANCH_NAME"

          # Commit changes
          git add .circleci/config.yml
          git commit -m "chore: update CircleCI orbs

          This PR was automatically generated by the update-orbs workflow."

          # Push the branch
          git push --force origin "$BRANCH_NAME"

          # Create PR using GitHub CLI
          gh pr create \
            --title "chore: update CircleCI orbs" \
            --body "This PR updates CircleCI orbs to their latest versions.

          **Changes:**
          - Updated .circleci/config.yml with new orb versions

          This PR was automatically generated by the \`update-orbs\` workflow.

          Please review the changes and test thoroughly before merging." \
            --head "$BRANCH_NAME" \
            --base "${{ env.BASE_BRANCH }}"